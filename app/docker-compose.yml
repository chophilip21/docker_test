# docker-compose.yml
version: '3.8'
networks: 
  monitoring: 
    driver: bridge 

# Persist data from Prometheus and Grafana with Docker volumes
volumes: 
  prometheus_data: {}
  grafana_data: {}

services:
  node-exporter: 
    image: prom/node-exporter:latest 
    container_name: node-exporter 
    restart: unless-stopped 
    volumes: 
      - /proc:/host/proc:ro 
      - /sys:/host/sys:ro 
      - /:/rootfs:ro 
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.rootfs=/rootfs' 
      - '--path.sysfs=/host/sys' 
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)' 
    ports: 
      - 9100:9100
    networks: 
      - monitoring 
  prometheus: 
    image: prom/prometheus:latest 
    container_name: prometheus 
    restart: unless-stopped 
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml' 
      - '--storage.tsdb.path=/prometheus' 
      - '--web.console.libraries=/etc/prometheus/console_libraries' 
      - '--web.console.templates=/etc/prometheus/consoles' 
      - '--web.enable-lifecycle' 
    ports: 
      - 9090:9090
    networks: 
      - monitoring 
  grafana: 
    image: grafana/grafana:latest 
    user: "472" 
    container_name: grafana 
    ports: 
      - 3000:3000 
    restart: unless-stopped 
    volumes: 
      - grafana_data:/var/lib/grafana
      - ./grafana/:/etc/grafana/provisioning/
    depends_on: 
      - prometheus
    networks: 
      - monitoring

  cadvisor: 
    image: gcr.io/cadvisor/cadvisor:latest 
    container_name: cadvisor 
    ports: 
      - 8080:8080
    networks: 
      - monitoring 
    volumes: 
      - /:/rootfs:ro 
      - /var/run:/var/run:rw 
      - /sys:/sys:ro 
      - /var/lib/docker/:/var/lib/docker:ro 
    depends_on: 
      - redis 

  redis: 
    image: redis:latest 
    container_name: redis 
    ports: 
      - 6379:6379 
    networks: 
      - monitoring
  
  backend:
    env_file:
      - .env
    build: ./webscrapper
    ports:
      - 5000:5000
    volumes:
      - ./webscrapper:/app
    command: uvicorn main:app --reload --host 0.0.0.0 --port 5000
    networks:
      monitoring:
        aliases:
          - backend

  streamlit-app:
    env_file:
      - .env
    build: ./front
    container_name: streamlitapp
    depends_on:
      - backend 
    ports:
      - 8501:8501
    working_dir: /usr/src/app
    networks:
      - monitoring